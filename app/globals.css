@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 150 30% 96%;
    --foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;

    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;

    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;

    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;

    --radius: 0.5rem;

    /* Custom Colors */
    --soft-mint: 150 30% 96%;
    --pale-coral: 10 100% 92%;
    --soft-lavender: 270 50% 90%;
    --neon-coral: 350 100% 65%;
    --neon-blue: 210 100% 65%;
    --neon-yellow: 50 100% 65%;
    --charcoal: 220 20% 20%;
  }

  .dark {
    --background: 220 20% 20%;
    --foreground: 0 0% 98%;

    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;

    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;

    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    @apply scroll-smooth;
  }

  body {
    @apply bg-background text-black;
    cursor: none;
  }

  /* Keep headings and other elements as they are */
  h1,
  h2,
  h3 {
    font-family: var(--font-bebas);
  }

  h4,
  h5,
  h6 {
    font-family: var(--font-oswald);
  }

  a,
  button {
    @apply cursor-none;
  }
}

@layer components {
  .noise {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 9999;
    opacity: 0.05;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  }


/* Hide native cursor */
html.hide-cursor,
html.hide-cursor * {
  cursor: none !important;
}

/* Performance optimizations for cursor */
.cursor {
  position: fixed;
  top: 0;
  left: 0;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  pointer-events: none;
  z-index: 10000;
  mix-blend-mode: difference;
  /* Remove transition here - we'll handle movement with JS */
  will-change: transform; /* Performance hint to browser */
  /* No need for transform here, we apply it via JS directly */
}

/* Keep these as they are */
.cursor-dot {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 8px;
  height: 8px;
  background-color: white;
  border-radius: 50%;
}

.cursor-outline {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  border: 1px solid white;
  border-radius: 50%;
  opacity: 0.5;
  transition: all 0.2s ease;
}

.cursor-hover .cursor-outline {
  transform: translate(-50%, -50%) scale(1.5);
  opacity: 0.8;
}

.cursor-click .cursor-outline {
  transform: translate(-50%, -50%) scale(0.8);
  opacity: 1;
}

  .magnetic-button {
    position: relative;
    display: inline-block;
    transform-style: preserve-3d;
    transform: perspective(500px);
    transition: transform 0.3s ease;
  }

  .magnetic-button-content {
    display: block;
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
  }

  .text-on-dark {
    @apply text-white;
  }

  .text-on-color {
    @apply text-white;
  }

  /* Update existing components that need white text */
  .neo-brutalist {
    @apply border-2 border-black shadow-[4px_4px_0px_0px_rgba(0,0,0,1)];
    transition: all 0.2s ease;
  }

  .neo-brutalist:hover {
    @apply shadow-[6px_6px_0px_0px_rgba(0,0,0,1)];
    transform: translate(-2px, -2px);
  }

  .neo-brutalist:active {
    @apply shadow-[2px_2px_0px_0px_rgba(0,0,0,1)];
    transform: translate(2px, 2px);
  }

  .text-outline {
    -webkit-text-stroke: 1px black;
    color: transparent;
  }

  .text-outline-white {
    -webkit-text-stroke: 1px white;
    color: transparent;
  }

  .marquee-container {
    overflow: hidden;
    white-space: nowrap;
    position: relative;
  }

  .marquee-content {
    display: inline-block;
    animation: marquee 20s linear infinite;
  }

  @keyframes marquee {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .distort-on-hover {
    transition: filter 0.3s ease;
  }

  .distort-on-hover:hover {
    filter: url("#distortion-filter");
  }

  .glitch-text {
    position: relative;
    animation: glitch 3s infinite;
  }

  @keyframes glitch {
    0% {
      transform: translate(0);
    }
    20% {
      transform: translate(-2px, 2px);
    }
    40% {
      transform: translate(-2px, -2px);
    }
    60% {
      transform: translate(2px, 2px);
    }
    80% {
      transform: translate(2px, -2px);
    }
    100% {
      transform: translate(0);
    }
  }

  .glitch-text::before,
  .glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .glitch-text::before {
    left: 2px;
    text-shadow: -1px 0 #ff00c1;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }

  .glitch-text::after {
    left: -2px;
    text-shadow: -1px 0 #00fff9;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim2 5s infinite linear alternate-reverse;
  }

  @keyframes glitch-anim {
    0% {
      clip: rect(42px, 9999px, 44px, 0);
    }
    5% {
      clip: rect(12px, 9999px, 59px, 0);
    }
    10% {
      clip: rect(48px, 9999px, 29px, 0);
    }
    15.0% {
      clip: rect(42px, 9999px, 73px, 0);
    }
    20% {
      clip: rect(63px, 9999px, 27px, 0);
    }
    25% {
      clip: rect(34px, 9999px, 55px, 0);
    }
    30.0% {
      clip: rect(86px, 9999px, 73px, 0);
    }
    35% {
      clip: rect(20px, 9999px, 20px, 0);
    }
    40% {
      clip: rect(26px, 9999px, 60px, 0);
    }
    45% {
      clip: rect(25px, 9999px, 66px, 0);
    }
    50% {
      clip: rect(57px, 9999px, 98px, 0);
    }
    55.0% {
      clip: rect(5px, 9999px, 46px, 0);
    }
    60.0% {
      clip: rect(82px, 9999px, 31px, 0);
    }
    65% {
      clip: rect(54px, 9999px, 27px, 0);
    }
    70% {
      clip: rect(28px, 9999px, 99px, 0);
    }
    75% {
      clip: rect(45px, 9999px, 69px, 0);
    }
    80% {
      clip: rect(23px, 9999px, 85px, 0);
    }
    85.0% {
      clip: rect(54px, 9999px, 84px, 0);
    }
    90% {
      clip: rect(45px, 9999px, 47px, 0);
    }
    95% {
      clip: rect(37px, 9999px, 20px, 0);
    }
    100% {
      clip: rect(4px, 9999px, 91px, 0);
    }
  }

  @keyframes glitch-anim2 {
    0% {
      clip: rect(65px, 9999px, 65px, 0);
    }
    5% {
      clip: rect(52px, 9999px, 77px, 0);
    }
    10% {
      clip: rect(28px, 9999px, 57px, 0);
    }
    15.0% {
      clip: rect(16px, 9999px, 13px, 0);
    }
    20% {
      clip: rect(24px, 9999px, 17px, 0);
    }
    25% {
      clip: rect(46px, 9999px, 34px, 0);
    }
    30.0% {
      clip: rect(23px, 9999px, 56px, 0);
    }
    35% {
      clip: rect(76px, 9999px, 95px, 0);
    }
    40% {
      clip: rect(46px, 9999px, 63px, 0);
    }
    45% {
      clip: rect(72px, 9999px, 43px, 0);
    }
    50% {
      clip: rect(31px, 9999px, 88px, 0);
    }
    55.0% {
      clip: rect(85px, 9999px, 29px, 0);
    }
    60.0% {
      clip: rect(95px, 9999px, 84px, 0);
    }
    65% {
      clip: rect(2px, 9999px, 27px, 0);
    }
    70% {
      clip: rect(95px, 9999px, 81px, 0);
    }
    75% {
      clip: rect(25px, 9999px, 15px, 0);
    }
    80% {
      clip: rect(76px, 9999px, 99px, 0);
    }
    85.0% {
      clip: rect(64px, 9999px, 11px, 0);
    }
    90% {
      clip: rect(82px, 9999px, 37px, 0);
    }
    95% {
      clip: rect(33px, 9999px, 68px, 0);
    }
    100% {
      clip: rect(93px, 9999px, 62px, 0);
    }
  }

  .split-text-container {
    overflow: hidden;
  }

  .split-text {
    display: inline-block;
    transform: translateY(100%);
    transition: transform 0.5s cubic-bezier(0.5, 0, 0.1, 1);
  }

  .split-text-visible {
    transform: translateY(0);
  }

  .staggered-fade-in {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.5s ease, transform 0.5s ease;
  }

  .staggered-fade-in.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .parallax-section {
    position: relative;
    overflow: hidden;
  }

  .parallax-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    will-change: transform;
  }

  .hover-scale {
    transition: transform 0.3s ease;
  }

  .hover-scale:hover {
    transform: scale(1.05);
  }

  .hover-rotate {
    transition: transform 0.3s ease;
  }

  .hover-rotate:hover {
    transform: rotate(5deg);
  }

  .hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .hover-lift:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  .text-gradient {
    background: linear-gradient(90deg, hsl(var(--neon-coral)), hsl(var(--neon-blue)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .text-gradient-animated {
    background: linear-gradient(
      90deg,
      hsl(var(--neon-coral)),
      hsl(var(--neon-blue)),
      hsl(var(--neon-yellow)),
      hsl(var(--neon-coral))
    );
    background-size: 300% 100%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradient-shift 8s ease infinite;
  }

  @keyframes gradient-shift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .reveal-on-scroll {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 0.8s ease, transform 0.8s ease;
  }

  .reveal-on-scroll.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  .grid-item {
    transition: all 0.5s ease;
  }

  .grid-item:hover {
    z-index: 10;
    transform: scale(1.05);
  }

  .grid-masonry {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    grid-auto-rows: 10px;
    grid-gap: 20px;
  }

  .grid-masonry-item {
    grid-row-end: span var(--span);
  }

  .scroll-indicator {
    position: fixed;
    top: 0;
    left: 0;
    height: 3px;
    background: linear-gradient(90deg, hsl(var(--neon-coral)), hsl(var(--neon-blue)));
    z-index: 9999;
    width: 0%;
    transition: width 0.1s ease;
  }

  .scroll-to-explore {
    animation: bounce 2s infinite;
  }

  @keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  .menu-item {
    position: relative;
    display: inline-block;
    transition: transform 0.3s ease;
  }

  .menu-item::after {
    content: "";
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: currentColor;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
  }

  .menu-item:hover::after {
    transform: scaleX(1);
    transform-origin: left;
  }

  .menu-item:hover {
    transform: translateY(-2px);
  }

  .menu-item.active::after {
    transform: scaleX(1);
  }

  .clip-path-reveal {
    clip-path: inset(0 100% 0 0);
    transition: clip-path 1s cubic-bezier(0.77, 0, 0.175, 1);
  }

  .clip-path-reveal.revealed {
    clip-path: inset(0 0 0 0);
  }

  .diagonal-sections {
    position: relative;
    padding: 100px 0;
    clip-path: polygon(0 0, 100% 5%, 100% 95%, 0 100%);
    margin: -50px 0;
  }

  .diagonal-sections-alt {
    position: relative;
    padding: 100px 0;
    clip-path: polygon(0 5%, 100% 0, 100% 100%, 0 95%);
    margin: -50px 0;
  }

  .image-distortion {
    filter: url("#turbulence");
    transition: filter 0.5s ease;
  }

  .image-distortion:hover {
    filter: url("#turbulence-intense");
  }

  .text-scramble {
    display: inline-block;
  }

  .char {
    display: inline-block;
    transition: transform 0.5s cubic-bezier(0.5, 0, 0.1, 1);
  }

  .char:hover {
    transform: translateY(-10px) rotate(10deg);
    color: hsl(var(--neon-coral));
  }

  .perspective-text {
    perspective: 1000px;
  }

  .perspective-text-inner {
    display: inline-block;
    transition: transform 0.3s ease;
  }

  .perspective-text:hover .perspective-text-inner {
    transform: rotateX(20deg) rotateY(-10deg);
  }

  .hover-3d {
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
  }

  .hover-3d:hover {
    transform: perspective(1000px) rotateX(10deg) rotateY(10deg);
  }

  .hover-3d-content {
    transform-style: preserve-3d;
  }

  .hover-3d-layer {
    transform: translateZ(20px);
  }

  .hover-3d-shadow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.2);
    transform: translateZ(-20px);
    filter: blur(10px);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .hover-3d:hover .hover-3d-shadow {
    opacity: 1;
  }
}
